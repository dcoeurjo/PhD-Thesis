%!PS-Adobe-2.0 EPSF-2.0
%%Title: result2.fig
%%Creator: fig2dev Version 3.2.3 Patchlevel 
%%CreationDate: Wed Dec 19 09:44:48 2001
%%For: dcoeurjo@bachus (David Coeurjolly)
%%BoundingBox: 0 0 192 59
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 59 moveto 0 0 lineto 192 0 lineto 192 59 lineto closepath clip newpath
-118.0 100.0 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
%%Page: 1 1
10 setmiterlimit
 0.06000 0.06000 sc
% Polyline
%
% Begin Imported PCX File: res_vis_dom32.pcx

n gs
1995 707 tr
29.468750 -29.468750 sc
0 -32 tr
0 0 tr
sa
/showpage {} def
% PCX image follows:
32 32 sc
%***********************************************************************
%*                                                                     *
%* Object: Image decoding PS-routine                    Date: 01.02.93 *
%* Author: Evgeni CHERNYAEV (chernaev@vxcern.cern.ch)                  *
%*                                                                     *
%* Function: Display a run-length encoded color image.                 *
%*           The image is displayed in color on viewers and printers   *
%*           that support color Postscript, otherwise it is displayed  *
%*           as grayscale.                                             *
%*                                                                     *
%***********************************************************************
/byte 1 string def
/color 3 string def
systemdict /colorimage known { /cnt 3 def } { /cnt 1 def } ifelse
/String 256 cnt mul string def
%***********************************************************************
/DecodePacket            % Decode color packet                         *
%***********************************************************************
{
  currentfile byte readhexstring pop 0 get
  /Nbyte exch 1 add cnt mul def
  /color ColorMap currentfile byte readhexstring pop 0 get get def
  String dup
  0 cnt Nbyte 1 sub { color putinterval dup } for
  pop 0 Nbyte getinterval
} bind def
%***********************************************************************
/DisplayImage            % Display run-length encoded color image      *
%***********************************************************************
{
  gsave
  currentfile String readline pop
  token { /columns exch def } { } ifelse
  token { /rows exch def pop } { } ifelse
  currentfile String readline pop
  token { /Ncol exch def pop } { } ifelse
  /ColorMap Ncol array def
  systemdict /colorimage known {
    0 1 Ncol 1 sub {
      ColorMap exch
      currentfile 3 string readhexstring pop put
    } for
    columns rows 8
    [ columns 0 0 rows neg 0 rows ]
    { DecodePacket } false 3 colorimage
  }{
    0 1 Ncol 1 sub {
      ColorMap exch
      1 string dup 0
      currentfile color readhexstring pop pop
      color 0 get 0.299 mul
      color 1 get 0.587 mul add
      color 2 get 0.114 mul add
      cvi put put
    } for
    columns rows 8
    [ columns 0 0 rows neg 0 rows ]
    { DecodePacket } image
  } ifelse
  grestore
} bind def
%***********************************************************************
%*                          Image decoding                             *
%***********************************************************************
DisplayImage
32 32
16
ffffff aeaeae 000000 000000 000000 000000 000000 000000 000000 000000
000000 000000 000000 000000 000000 000000
420006011102060006011102060007011002060008010f02060009010e0206000a010d02
06000b010c0206000b010c0206000c010b0206000d010a0206000e01090206000f010802
170007021700070217000702170007021700070217000702170007021700070217000702
1700070217000702170007021700070217000702170007026300
restore grestore
%
% End Imported PIC File: res_vis_dom32.pcx
%
% Polyline
%
% Begin Imported PCX File: res_vis_domi.pcx

n gs
3107 707 tr
14.734375 -14.734375 sc
0 -64 tr
0 0 tr
sa
/showpage {} def
% PCX image follows:
64 64 sc
%***********************************************************************
%*                                                                     *
%* Object: Image decoding PS-routine                    Date: 01.02.93 *
%* Author: Evgeni CHERNYAEV (chernaev@vxcern.cern.ch)                  *
%*                                                                     *
%* Function: Display a run-length encoded color image.                 *
%*           The image is displayed in color on viewers and printers   *
%*           that support color Postscript, otherwise it is displayed  *
%*           as grayscale.                                             *
%*                                                                     *
%***********************************************************************
/byte 1 string def
/color 3 string def
systemdict /colorimage known { /cnt 3 def } { /cnt 1 def } ifelse
/String 256 cnt mul string def
%***********************************************************************
/DecodePacket            % Decode color packet                         *
%***********************************************************************
{
  currentfile byte readhexstring pop 0 get
  /Nbyte exch 1 add cnt mul def
  /color ColorMap currentfile byte readhexstring pop 0 get get def
  String dup
  0 cnt Nbyte 1 sub { color putinterval dup } for
  pop 0 Nbyte getinterval
} bind def
%***********************************************************************
/DisplayImage            % Display run-length encoded color image      *
%***********************************************************************
{
  gsave
  currentfile String readline pop
  token { /columns exch def } { } ifelse
  token { /rows exch def pop } { } ifelse
  currentfile String readline pop
  token { /Ncol exch def pop } { } ifelse
  /ColorMap Ncol array def
  systemdict /colorimage known {
    0 1 Ncol 1 sub {
      ColorMap exch
      currentfile 3 string readhexstring pop put
    } for
    columns rows 8
    [ columns 0 0 rows neg 0 rows ]
    { DecodePacket } false 3 colorimage
  }{
    0 1 Ncol 1 sub {
      ColorMap exch
      1 string dup 0
      currentfile color readhexstring pop pop
      color 0 get 0.299 mul
      color 1 get 0.587 mul add
      color 2 get 0.114 mul add
      cvi put put
    } for
    columns rows 8
    [ columns 0 0 rows neg 0 rows ]
    { DecodePacket } image
  } ifelse
  grestore
} bind def
%***********************************************************************
%*                          Image decoding                             *
%***********************************************************************
DisplayImage
64 64
16
ffffff a3a3a3 cbcbcb 707070 414141 e8e8e8 f7f7f7 f4f4f4 e7e7e7 e5e5e5
3f3f3f 000000 000000 000000 000000 000000
ff0004000901080215030e0407000901090214030e0407000901090214030e0407000a01
080214030e0407000a01080214030e0407000a01080213030f0407000a01080213030f04
07000b01070213030f0407000b01070213030f0407000b01070213030f0407000b010802
12030f0407000c0107021103100407000c0107021103100407000c010702110310040700
0c0107021103100407000d01060211030f04000507000d01060210031004000507000d01
060210030f04010507000e0106020f030f040105070000060d0106020f030e0402050700
00060d0106020f030e040205070001060d0106020e030d040305070002060c0106020d03
0d040405070002060c0106020d030d040405070003060c0106020c030c04050507000306
0c0106020c030c040505070004060b0106020c030b040605070004060b01000706020a03
00080b040605070005060a01000706020a0300080a040705070006060801010706020903
000901080804080507000606080102070602070301090108080408050700070607010207
060207030109010807040905070007060701020706020603020901080704090507000806
06010207070204030209020806040a050700080606010207070204030209020806040a05
0700090605010207070203030309020805040b05120003010c000103080003041f000301
0c000103080003041f0003010c000003000a080003041f0003010c00010a080003041f00
03010700000b050a08000204000b1f00010b01010600020b0d000104010b1f00020b0001
0600020b0d000004020b1f00030b0600020b0d00030b1400370b0700370b0700370b0700
370b0700370b0700370b0700370b0700370b0700370b0700370b0700370b0700370bff00
0200
restore grestore
%
% End Imported PIC File: res_vis_domi.pcx
%
% Polyline
%
% Begin Imported PCX File: res_vis_dom1.pcx

n gs
4200 707 tr
14.734375 -14.734375 sc
0 -64 tr
0 0 tr
sa
/showpage {} def
% PCX image follows:
64 64 sc
%***********************************************************************
%*                                                                     *
%* Object: Image decoding PS-routine                    Date: 01.02.93 *
%* Author: Evgeni CHERNYAEV (chernaev@vxcern.cern.ch)                  *
%*                                                                     *
%* Function: Display a run-length encoded color image.                 *
%*           The image is displayed in color on viewers and printers   *
%*           that support color Postscript, otherwise it is displayed  *
%*           as grayscale.                                             *
%*                                                                     *
%***********************************************************************
/byte 1 string def
/color 3 string def
systemdict /colorimage known { /cnt 3 def } { /cnt 1 def } ifelse
/String 256 cnt mul string def
%***********************************************************************
/DecodePacket            % Decode color packet                         *
%***********************************************************************
{
  currentfile byte readhexstring pop 0 get
  /Nbyte exch 1 add cnt mul def
  /color ColorMap currentfile byte readhexstring pop 0 get get def
  String dup
  0 cnt Nbyte 1 sub { color putinterval dup } for
  pop 0 Nbyte getinterval
} bind def
%***********************************************************************
/DisplayImage            % Display run-length encoded color image      *
%***********************************************************************
{
  gsave
  currentfile String readline pop
  token { /columns exch def } { } ifelse
  token { /rows exch def pop } { } ifelse
  currentfile String readline pop
  token { /Ncol exch def pop } { } ifelse
  /ColorMap Ncol array def
  systemdict /colorimage known {
    0 1 Ncol 1 sub {
      ColorMap exch
      currentfile 3 string readhexstring pop put
    } for
    columns rows 8
    [ columns 0 0 rows neg 0 rows ]
    { DecodePacket } false 3 colorimage
  }{
    0 1 Ncol 1 sub {
      ColorMap exch
      1 string dup 0
      currentfile color readhexstring pop pop
      color 0 get 0.299 mul
      color 1 get 0.587 mul add
      color 2 get 0.114 mul add
      cvi put put
    } for
    columns rows 8
    [ columns 0 0 rows neg 0 rows ]
    { DecodePacket } image
  } ifelse
  grestore
} bind def
%***********************************************************************
%*                          Image decoding                             *
%***********************************************************************
DisplayImage
64 64
16
ffffff 000000 414141 e3e3e3 7d7d7d b0b0b0 9f9f9f c5c5c5 5d5d5d 000000
000000 000000 000000 000000 000000 000000
ff00ff0006000e010e0209000a030c000e010e0209000a030c000d010f0209000a030c00
0d010f0209000a030c000c01100209000a030c000c01100209000a030c000b0111020900
0a030c000b01110209000a030c000a01120209000a030c000a01120209000a030c000901
130209000a030c00080108000b0209000a030c00080108000704030209000a030c000801
08000b0409000a030c00080108000b0409000a030c00080108000b0409000a030c000801
08000b0409000a030c00080108000b0409000a030c00080108000b0409000a030c000801
08000b040900070302050c00080108000b0409000a050c00080108000d0412050c000801
08000e0411050c00080108000f0410050c000801080011040e050c000801080012040d05
0c000801080005060d040c050c00080108000c06040003040a050c00080108000c060400
0007030409050c00080108000c0604000107030408050c00080108000c06040002070404
06050c00080108000c0604000307040405050c00080108000c0604000407040404050c00
080108000c0604000507050402050c00080108000c0604000607050401050c0008010800
0c0604000707050400050c0008010800070604080400080705040c00080108000c080400
090704040c000901140804000a0703040c000901140804000b0702040c000a0113080400
0c0701040c000a01130804000d0700040c000a01130804000e070c000b01120804000e07
0c000b01120804000e070c000c01110804000e070c000c01110804000e070c000c011108
04000e070c000d01100804000e07ff00c500
restore grestore
%
% End Imported PIC File: res_vis_dom1.pcx
%
$F2psEnd
rs
